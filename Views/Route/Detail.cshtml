@model Ares.Models.RouteModel
@{
    ViewBag.Title = "Route Detail";
    ViewBag.Current = "Route";
}
<style>
    #right-panel {
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }

        #right-panel select, #right-panel input {
            font-size: 15px;
        }

        #right-panel select {
            width: 100%;
        }

        #right-panel i {
            font-size: 12px;
        }

    /*#right-panel {
        margin: 20px;
        border-width: 2px;
        width: 20%;
        height: 400px;
        float: left;
        text-align: left;
        padding-top: 0;
    }*/

    #directions-panel {
        margin-top: 10px;
        background-color: #FFEE77;
        padding: 10px;
        overflow: scroll;
        height: 174px;
    }
</style>
<div id="content-header">
    <div id="breadcrumb"> <a href="#" title="Create Student Page" class="tip-bottom"><i class="icon-home"></i> Rut Detayları</a></div>
</div>

<div class="container-fluid">
    <div class="row-fluid">
        <div id="map" style="width:70%; min-height:480px; float:left;"></div>
        <div id="right-panel" style="width:20%; height:auto; float:left;">
            <div>
                <b>Başlangıç:</b>
                <select id="start">
                    <option value="@Model.route.startAddress">@Model.route.startAddress</option>
                </select>
                <br>
                <b>Waypoints:</b> <br>
                <i>(Ctrl+Click or Cmd+Click for multiple selection)</i> <br>
                <select multiple id="waypoints">
                    @foreach (var item in Model.stationList)
                    {
                        if (item.Students.Count != 0)
                        {
                            <option selected="selected" id="@item.id" value="@item.stationAddress||@item.id||@item.Lat||@item.Lng||@item.Students.First().name||@item.orderNumber">@item.stationAddress</option>
                        }
                    }
                </select>
                <br>
                <b>End:</b>
                <select id="end">
                    <option value="@Model.route.finishAddress">@Model.route.finishAddress</option>
                </select>
                <br>
                Otomatik Sıralama: <input type="checkbox" id="auto_order">
                <input type="submit" id="submit">
            </div>
            <div id="directions-panel"></div>
        </div>
        <script>
            var stationList = [];
            var allMarkers = [];
            var map;
            function initMap() {
                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer;
                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 6,
                    center: { lat: 38.414480, lng: 27.144123 }
                });
                directionsDisplay.setMap(map);
                var start = new google.maps.Marker({
                    position: {
                        lat: parseFloat(("@Model.route.startLat").replace(",", ".")),
                        lng: parseFloat(("@Model.route.startLng").replace(",", "."))
                    },
                    map: map,
                    icon: "http://maps.google.com/mapfiles/kml/pal4/icon15.png",

                });
                allMarkers.push(start);
                document.getElementById('submit').addEventListener('click', function () {
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                });
                var finish = new google.maps.Marker({
                    position: {
                        lat: parseFloat(("@Model.route.finishLat").replace(",", ".")),
                        lng: parseFloat(("@Model.route.finishLng").replace(",", "."))
                    },
                    map: map,
                    icon: "http://maps.google.com/mapfiles/kml/pal4/icon21.png",

                });
                allMarkers.push(finish);
            }

            function calculateAndDisplayRoute(directionsService, directionsDisplay) {

                var waypts = [];
                var checkboxArray = document.getElementById('waypoints');
                for (var i = 0; i < checkboxArray.length; i++) {
                    var res = checkboxArray[i].value.split("||");
                    if (checkboxArray.options[i].selected) {
                        waypts.push({
                            location: res[0],
                            stopover: true,
                        });
                        stationList.push(
                            {
                                location: res[0],
                                stationId: res[1],
                                order : 0
                            });
                        var marker = new google.maps.Marker({
                            position: {
                                lat: parseFloat(res[2].replace(",", ".")),
                                lng: parseFloat(res[3].replace(",", "."))
                            },
                            map: map,
                            label: res[5],
                            // icon: "http://maps.google.com/mapfiles/kml/pal2/icon13.png"
                        });
                        let infowindow = new google.maps.InfoWindow({
                            content: '<div>'+res[4]+"</div>"+res[0],
                        });
                        marker.addListener('click', function () {
                            infowindow.open(map, this);
                        });
                        allMarkers.push(marker);
                    }
                }
                directionsService.route({
                    origin: document.getElementById('start').value,
                    destination: document.getElementById('end').value,
                    provideRouteAlternatives: false,
                    waypoints: waypts,
                    optimizeWaypoints: true,
                    travelMode: 'DRIVING',
                    drivingOptions: {
                        departureTime: new Date(Date.now()),
                        trafficModel: 'optimistic'
                    },
                }, function (response, status) {
                    if (status === 'OK') {
                        directionsDisplay.setOptions({
                            suppressMarkers: true,
                        });
                        directionsDisplay.setDirections(response);
                        var route = response.routes[0];
                        var summaryPanel = document.getElementById('directions-panel');
                        summaryPanel.innerHTML = '';
                        // For each route, display summary information.
                        for (var i = 0; i < route.legs.length; i++) {
                            var routeSegment = i + 1;
                            summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                                '</b><br>';
                            summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                            summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                            summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                            ///console.log(i);
                            
                            //for (var k = 0; k < stationList.length; k++) {
                            //    console.log(route.waypoint)
                            //    }

                            //    // allMarkers[k].set('labelContent', route.waypoint_order[k]);
                            //   /* if (stationList[k].location== route.legs[i].end_address ) {
                            //        stationList[k].order = routeSegment;
                            //        allMarkers[k].set('labelContent', routeSegment);
                            //    }*/

                            //}
                            //console.log(route.waypoint_order);
                            //console.log(stationList);
                        }
                        if (document.getElementById("auto_order").checked) {
                            for (var k = 0; k < stationList.length; k++) {
                                var _tmp = route.waypoint_order[k];
                                stationList[_tmp].order = k+1;
                                //allMarkers[k].set('labelContent', k+1);
                                //allMarkers[k].set('label', k + 1);
                            }
                        }
                        //console.log(route.waypoint_order);
                        //console.log(route.waypoint_order[0]);
                        console.log(stationList);
                        /*for (var j = 0; j < stationList.length; j++) {
                            alert(route.legs[j].end_address);
                            alert(stationList[j].location + " - " + stationList[j].order + " - " + stationList[j].stationId);
                        }*/
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                    console.log(stationList);
                    console.log(route.legs);
                    var postData = stationList;
                    if (document.getElementById("auto_order").checked) {
                        $.ajax({
                            url: "/Route/ChangeStationOrder",
                            type: "POST",
                            data: JSON.stringify(postData),
                            contentType: 'application/json',
                            success: function (data) {
                                // alert("Success");
                                document.getElementById("auto_order").checked = false;
                                // calculateAndDisplayRoute(directionsService, directionsDisplay);
                                location.reload();
                            },
                            error: function (jqXHR, status, error) {
                                console.log(status + ": " + error);
                            }
                        });
                    }
                    stationList = [];
                });
            }
        </script>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBF4fZ_6PlAfMP2pgwo2sisPSh42aWlfXo&callback=initMap&language=en">
        </script>
    </div>

    <div class="row-fluid">
        <div class="widget-box">
            <div class="widget-title">
                <span class="icon"> <i class="icon-align-justify"></i> </span>
                <h5>Rut Bilgileri</h5>
            </div>
            <div class="widget-content nopadding">
                <form method="post" action="~/Route/Detail" class="form-horizontal">
                    <input type="hidden" name="id" value="@Model.route.id" />
                    <div class="control-group">
                        <label class="control-label">Rut Adı:</label>
                        <div class="controls">
                            <input type="text" class="span11" placeholder="Rut Adı" name="name" value="@Model.route.name">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Başlangıç Adresi :</label>
                        <div class="controls">
                            <input type="text" class="span11" placeholder="Başlangıç Adresi" name="startAddress" value="@Model.route.startAddress">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Bitiş Adresi :</label>
                        <div class="controls">
                            <input type="text" class="span11" placeholder="Bitiş Adresi" name="finishAddress" value="@Model.route.finishAddress">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Açıklama :</label>
                        <div class="controls">
                            <input type="text" class="span11" placeholder="Açıklama" name="description" value="@Model.route.description">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Ortalama Saat :</label>
                        <div class="controls">
                            <input type="text" class="span11" placeholder="Ortalama Saat" name="averageTime" value="@Model.route.averageTime">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Okul :</label>
                        <div class="controls">
                            @Model.selectedSchool.name
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Sabah :</label>
                        <div class="controls">
                            <select name="busId">
                                @if (Model.selectedBus != null)
                                {
                                    <option value="@Model.selectedBus.id">@Model.selectedBus.authorizePersonName - @Model.selectedBus.plate</option>
                                }
                                else
                                {
                                    <option value=""></option>
                                }
                                @foreach (var item in Model.busList)
                                {
                                    <option value="@item.id">@item.authorizePersonName - @item.plate</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Akşam :</label>
                        <div class="controls">
                            <select name="busId2">
                                @if (Model.secondBus != null)
                                {
                                    <option value="@Model.secondBus.id">@Model.secondBus.authorizePersonName - @Model.secondBus.plate</option>
                                }
                                else
                                {
                                    <option value=""></option>
                                }
                                @foreach (var item in Model.busList)
                                {
                                    <option value="@item.id">@item.authorizePersonName - @item.plate</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-actions">
                        <button type="submit" value="Update" name="Update" class="btn btn-success">Güncelle</button>
                        <button type="submit" value="Delete" name="Delete" class="btn btn-danger">Sil</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span12">
            <div class="widget-box">
                <div class="widget-title">
                    <span class="icon"><i class="icon-th"></i></span>
                    <h5>Öğrenci Tablosu</h5>
                </div>
                <div class="widget-content nopadding">
                    <table id="studentList" class="table table-bordered data-table">
                        <thead>
                            <tr>
                                <th>Order</th>
                                <th>Öğrenci Adı</th>
                                <th>Adres</th>
                                <th>Telefon</th>
                                <th>Oluşturma Tarihi</th>
                            </tr>
                        </thead>
                        <tbody role="alert" aria-live="polite" aria-relevant="all">
                            @foreach (var item in Model.stationList)
                            {
                                if (item.Students.Count != 0)
                                {
                                    <tr class="gradeA odd">
                                        <td class="">
                                            <select onchange="changeOrder(@item.id,this.value)" id="order">
                                                @for (int i = 0; i < 28; i++)
                                                {
                                                    if(item.orderNumber == i) { 
                                                        <option selected value="@i.ToString()">@i.ToString()</option>
                                                    }
                                                    else { 
                                                       <option value="@i.ToString()">@i.ToString()</option>
                                                    }
                                                }
                                            </select>
                                        </td>
                                        <td class=""><a href="/Student/Detail?id=@item.Students.First().id">@item.Students.First().name</a></td>
                                        <td class=" ">@item.stationAddress</td>
                                        <td class=" ">@item.Students.First().phone</td>
                                        <td class="center ">@item.createdDate</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!--end-Footer-part-->
<script src="~/assets/js/dataTable/jquery-3.3.1.js"></script>
<script src="~/assets/js/bootstrap.min.js"></script>
<script src="~/assets/js/dataTable/jquery.dataTables.min.js"></script>
<script src="~/assets/js/dataTable/dataTables.buttons.min.js"></script>
<script src="~/assets/js/dataTable/buttons.flash.min.js"></script>
<script src="~/assets/js/dataTable/jszip.min.js"></script>
<script src="~/assets/js/dataTable/pdfmake.min.js"></script>
<script src="~/assets/js/dataTable/vfs_fonts.js"></script>
<script src="~/assets/js/dataTable/buttons.html5.min.js"></script>
<script src="~/assets/js/dataTable/buttons.print.min.js"></script>
<script src="~/assets/js/matrix.js"></script>
<script>
    $(document).ready(function () {
        $("#submit").trigger("click");
    });
    function changeOrder(stationID,order) {

        //var order = document.getElementById("order").value;
        console.log(order);
        $.ajax({
            url: "/Route/SingleOrderChange",
            type: "POST",
            data: { stationID: stationID, order: order },
            success: function (data) {
                alert("Success");
            },
            error: function (jqXHR, status, error) {
                console.log(status + ": " + error);
            }
        });
        //console.log(stationID);
        //console.log(order);
        
    }
</script>
<script>
    $(document).ready(function () {
        $('#studentList').DataTable({
            dom: 'Bfrtip',
            buttons: [
                'excel', 'pdf', 'print'
            ]
        });
    });
</script>